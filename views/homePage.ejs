<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hacking Dashboard</title>
    <link rel="icon" type="image/x-icon" href="./hacktifyLogo.png" />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
</head>

<body class="bg-gray-900 text-white font-sans">
    <nav class="bg-gray-800 p-4 flex justify-between items-center sticky top-0 z-10">
        <div class="flex items-center space-x-4">
            <img src="/cyberAbhyaas.jpg" alt="logo" class="w-16">
            <h1 class="text-2xl font-bold">Cyber Abhyaas 2024</h1>
        </div>
        <div class="flex items-center space-x-4">
            <div id="uploadOptionforaddingFlags" class="hidden">
                <!-- Input for uploading Excel file -->
                <input type="file" id="fileInput" class="hidden">
                <label for="fileInput"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 rounded cursor-pointer">Upload
                    File</label>
            </div>
            <button id="signOutBtn" class="bg-green-600 hover:bg-green-700 px-4 py-2 rounded-md" onclick="logout()">Sign
                Out</button>
        </div>
    </nav>
    <div id="fetchEncryptedFlag" class="flex justify-center items-center h-screen">
        <div class="border border-gray-300 rounded-lg p-8 bg-gray-700">
            <div
                class="max-w-md p-8 bg-gradient-to-r from-orange-400 via-yellow-500 to-yellow-600 rounded-md shadow-lg">
                <h1 class="text-3xl font-semibold text-white mb-8">Fetch Encrypted Flag</h1>
                <form id="fetchFlagForm" class="space-y-4">
                    <div>
                        <label for="ctfdflag" class="block text-lg font-semibold text-white">CTFd Flag:</label>
                        <input type="text" id="ctfdflag"
                            class="mt-1 block w-full rounded-md bg-gray-100 bg-opacity-50 py-2 px-4 text-lg text-black focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white"
                            placeholder="Enter CTFd flag">
                    </div>
                    <button type="submit"
                        class="bg-white text-yellow-600 hover:text-yellow-700 font-semibold py-3 px-6 rounded-md shadow-md transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-opacity-50">
                        Fetch Encrypted Flag
                    </button>
                </form>
                <div id="encryptedFlag" class="mt-8 text-xl font-semibold text-white hidden">Encrypted Flag: <span
                        id="encryptedFlagValue"></span></div>
                <div id="error" class="mt-8 text-xl font-semibold text-red-500 hidden">Error: <span
                        id="errorMessage"></span></div>
            </div>
        </div>
    </div>

    <script src="/Signin/isSignin.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const fetchEncryptedFlag = document.getElementById("fetchEncryptedFlag");
            const fetchFlagForm = document.getElementById("fetchFlagForm");
            const ctfdFlagInput = document.getElementById("ctfdflag");
            const encryptedFlagDiv = document.getElementById("encryptedFlag");
            const encryptedFlagValue = document.getElementById("encryptedFlagValue");
            const errorDiv = document.getElementById("error");
            const errorMessage = document.getElementById("errorMessage");

            fetchFlagForm.addEventListener("submit", async function (event) {
                event.preventDefault();

                const ctfdFlag = ctfdFlagInput.value;

                try {
                    const response = await fetch('/fetch-flag', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Auth-token': localStorage.getItem('Hactify-Auth-token')
                        },
                        body: JSON.stringify({ ctfdFlag }),
                    });

                    if (!response.ok) {
                        throw new Error('Failed to fetch encrypted flag');
                    }

                    const data = await response.json();
                    encryptedFlagValue.textContent = data.encryptedFlag;
                    encryptedFlagDiv.classList.remove("hidden");
                    errorDiv.classList.add("hidden");
                } catch (error) {
                    errorMessage.textContent = 'Flag not found';
                    errorDiv.classList.remove("hidden");
                    console.error('Error fetching encrypted flag:', error);
                }
            });
        });


        // Add event listener for file input change
        document.getElementById('fileInput').addEventListener('change', handleFileChange);

        function handleFileChange(e) {
            const file = e.target.files[0];
            handleFileUpload(file);
        }

        // Function to handle file upload
        async function handleFileUpload(file) {
            try {
                const formData = new FormData();
                formData.append('file', file);

                const response = await fetch('/upload', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();
                console.log(data);
            } catch (error) {
                console.error('Error uploading file:', error);
            }
        }

    </script>
</body>

</html>